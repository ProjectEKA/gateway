openapi: 3.0.0
info:
  title: Gateway Internal
  description: Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges.
  version: 1.0.0
servers:
  - url: https://ncg-dev.projecteka.in/gateway
    description: Dev
tags:
  - name: registration
paths:
  /internal/cm:
    put:
      tags:
        - registration
      summary: Creation of CM service entries in DB by admin.
      description: This API is to create CM service entries in database.
      parameters:
        - $ref: "#/components/parameters/authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CMRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CMRegistrationRequest'
      responses:
        '200':
          description: CM Service entries added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: >
            Invalid request, required attributes not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /internal/bridges:
    put:
      tags:
        - registration
      summary: creation of bridge entry in DB by admin
      description: >
        This API is meant for creating bridge entry in database.
      parameters:
        - $ref: "#/components/parameters/authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BridgeRegistrationRequest'
      responses:
        '200':
          description: Bridge entry created/updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: >
            Invalid request, required attributes not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /internal/bridges/{bridgeId}/services:
      put:
        tags:
          - registration
        summary: creation of bridge services entries in DB by admin
        description: >
          This API is meant for creating bridge services entries in database.
        parameters:
          - $ref: "#/components/parameters/authorization"
          - $ref: "#/components/parameters/bridgeId"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeServiceRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/BridgeServiceRequest'
        responses:
          '200':
            description: Bridge Services entries created/updated successfully
          '400':
            description: >
              Invalid request, required attributes not provided
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: >
              **Causes:**
                * Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
              application/xml:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description: >
              **Causes:**
                * Downstream system(s) is down.
                * Unhandled exceptions.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
              application/xml:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
    bridgeId:
      name: bridgeId
      in: path
      required: true
      schema:
        type: string
  schemas:
    CMRegistrationRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        cm_id:
          type: string
        suffix:
          type: string
        active:
          type: boolean
        blocklisted:
          type: boolean
        license:
          type: string
        licensing_authority:
          type: string
      required:
        - "url"
        - "cm_id"
        - "suffix"
      xml:
        name: CMRegistrationRequest
    BridgeRegistrationRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        active:
          type: boolean
        blocklisted:
          type: boolean
      xml:
        name: BridgeRegistrationRequest
    BridgeServiceRequest:
      type: array
      items:
        $ref: '#/components/schemas/BridgeService'
      xml:
        name: BridgeServiceRequest
    BridgeService:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/ServiceType'
        active:
          type: boolean
      xml:
        name: BridgeServiceRequest
    ServiceType:
      type: string
      enum: [HIP, HIU]
    ClientResponse:
      type: object
      properties:
        id:
          type: string
        secret:
          type: string
      xml:
        name: ClientResponse
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
      xml:
        name: ErrorResponse
    Error:
      type: object
      properties:
        code:
          type: integer
          enum: [1000, 10001]
        message:
          type: string
      xml:
        name: Error