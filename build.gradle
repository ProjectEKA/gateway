plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

group = 'in.projecteka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

task bootRunLocal {
    bootRun.configure {
        systemProperty "spring.profiles.active", 'local'
    }
}

bootRunLocal.finalizedBy bootRun

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'log4j:log4j:1.2.17'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    compile 'net.logstash.logback:logstash-logback-encoder:6.3'
    implementation 'com.nimbusds:nimbus-jose-jwt:8.15'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.jeasy:easy-random-core:4.2.0'
    implementation 'io.vertx:vertx-pg-client:3.9.0'
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "ProjectEKA_gateway"
        property "sonar.organization", "projecteka"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "dd5db84dbf8f6dbd393291c26fe038ab54f00072"

        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

jacocoTestReport {
    additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
        html.destination file("build/reports/jacoco/html")
    }
    executionData.from = files('build/jacoco/test.exec')
}
